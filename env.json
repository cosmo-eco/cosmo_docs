[
  {
    "Section_Desc": "This section contains various functions related to environment manipulation, hidden properties, and game data retrieval, allowing access to both public and private objects and their properties within the game environment.",
    "Section_Name": "Environment Functions",
    "Funcs": [
    {
      "Func_Code": "function loadstring<A...>(chunk: string): (((A...) -> any)?, string?)",
      "Func_Description": "Attempts to load chunk, returns a valid function is successful. If compilation fails, nil is returned alongside an error message.",
      "Func_Name": "Loadstring"
    },
    {
      "Func_Code": "function getthreadidentity(): number",
      "Func_Description": "Returns the identity for the current thread.",
      "Func_Name": "Get Identity"
    },
    {
      "Func_Code": "function getscriptfromthread(t: thread): Instance",
      "Func_Description": "Returns the script from the given thread, even if the script has been set to nil. Cosmo threads will return nil.",
      "Func_Name": "Get Script From Thread"
    },
    {
      "Func_Code": "function gethui(): Instance",
      "Func_Description": "Returns a hidden GUI container used to prevent detection from FindFirstChild. Does not trigger game.DescendantAdded.",
      "Func_Name": "Get Hidden UI"
    },
    {
      "Func_Code": "function getgenv(): {[string]: any}",
      "Func_Description": "Returns the Cosmo environment.",
      "Func_Name": "Get Global Environment"
    },
    {
      "Func_Code": "function getrenv(): {[string]: any}",
      "Func_Description": "Returns the global game environment.",
      "Func_Name": "Get Game Environment"
    },
    {
      "Func_Code": "function getreg(): {[any]: any}",
      "Func_Description": "Returns the Lua registry.",
      "Func_Name": "Get Registry"
    },
    {
      "Func_Code": "function getgc(include_tables: boolean): {[number]: function | userdata | {[any]: any}}",
      "Func_Description": "Returns the garbage collection table. Optionally includes tables.",
      "Func_Name": "Get Garbage Collection"
    },
    {
      "Func_Code": "function getsenv(script: (LocalScript | ModuleScript)): {[string]: any}",
      "Func_Description": "Returns the environment of the given script.",
      "Func_Name": "Get Script Environment"
    },
    {
      "Func_Code": "function getinstances(): {[number]: Instance}",
      "Func_Description": "Returns all instances in the client.",
      "Func_Name": "Get Instances"
    },
    {
      "Func_Code": "function getnilinstances(): {[number]: Instance}",
      "Func_Description": "Returns all instances that are parented to nil.",
      "Func_Name": "Get Nil Instances"
    },
    {
      "Func_Code": "function getconnections(signal: RbxScriptSignal): {[number]: Connection}",
      "Func_Description": "Returns a list of active connections to the specified signal.",
      "Func_Name": "Get Connections"
    },
    {
      "Func_Code": "function gethiddenproperty(object: Instance, property: string)",
      "Func_Description": "Returns the hidden property of the object. Currently supports BinaryString, SharedString.",
      "Func_Name": "Get Hidden Property"
    },
    {
      "Func_Code": "function getproperties(object: Instance): {[number]: string}",
      "Func_Description": "Returns an array of property names on the object.",
      "Func_Name": "Get Properties"
    },
    {
      "Func_Code": "function gethiddenproperties(object: Instance): {[number]: string}",
      "Func_Description": "Returns an array of hidden property names on the object.",
      "Func_Name": "Get Hidden Properties"
    },
    {
      "Func_Code": "function getscriptbytecode(script: Instance): string",
      "Func_Description": "Returns the Luau bytecode of the specified script.",
      "Func_Name": "Get Script Bytecode"
    },
    {
      "Func_Code": "function getscripthash(script: Instance): string",
      "Func_Description": "Returns the hashed bytecode of the given script. Useful for detecting changes in game scripts.",
      "Func_Name": "Get Script Hash"
    },
    {
      "Func_Code": "function getloadedmodules(filter: boolean): {[number]: ModuleScript}",
      "Func_Description": "Returns all loaded ModuleScripts. If filter is false, it will include core items.",
      "Func_Name": "Get Loaded Modules"
    }
    ]
  }
]
